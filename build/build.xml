<?xml version="1.0" encoding="UTF-8"?>
<project name="jswiff" default="jar" basedir="..">

  <path id="src.classpath">
    <fileset dir="./lib">
      <include name="*.jar" />
    </fileset>
  </path>

  <!-- set some properties -->
  <target name="init">
    <tstamp/>
    <property name="projectName" value="jswiff9" />
    <property name="version" value="-svn-${DSTAMP}" />
    <property name="debug" value="on"/>
    <property name="srcDir" value="src/java" />
    <property name="testDir" value="src/test" />
    <property name="samplesDir" value="src/samples" />
    <property name="toolsDir" value="src/tools" />
    <property name="buildDir" value="build" />
    <property name="classDir" value="${buildDir}/classes" />
    <property name="libDir" value="lib" />
    <property name="javadocDir" value="api" />
    <property name="archiveFile" value="${projectName}${version}" />
  	<property name="distDir" value="dist" />
  	<property name="cliJar"  value="${distDir}/${projectName}-cli-${DSTAMP}.jar" />
  	<property name="jarFile" value="${distDir}/${archiveFile}.jar" />
  	<property name="zipFile" value="${distDir}/${archiveFile}.zip" />
    <property name="tarFile" value="${distDir}/${archiveFile}.tar" />
    <property name="tgzFile" value="${distDir}/${archiveFile}.tar.gz" />
  </target>

  <!-- compile the source files -->
  <target name="compile" depends="init">
    <delete dir="${classDir}" includeEmptyDirs="true" />
    <mkdir dir="${classDir}" />
    <javac debug="${debug}"
           destdir="${classDir}"
           classpathref="src.classpath"
           encoding="UTF-8">
      <src path="${srcDir}" />
      <src path="${toolsDir}" />
    </javac>
    <copy includeemptydirs="false" todir="${classDir}">
      <fileset dir="${srcDir}" excludes="**/*.java" />
      <fileset dir="${toolsDir}" excludes="**/*.java" />
    </copy>
  </target>

  <!-- create a JAR file -->
  <target name="jar" depends="compile">
  	<mkdir dir="${distDir}" />
  	<jar destfile="${jarFile}" basedir="${classDir}">
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Main-Class" value="com.jswiff.investigator.Investigator"/>
      </manifest>
    </jar>
    <delete dir="${classDir}" includeEmptyDirs="true" />
  </target>
	
  <!-- create a CLI JAR file -->
  <target name="cli" depends="compile">
    <mkdir dir="${distDir}" />
    <jar destfile="${cliJar}" basedir="${classDir}">
      <zipfileset src="lib/dom4j-1.6.1.jar" includes="**/*.class"/>
      <zipfileset src="lib/jaxen-1.1.1.jar" includes="**/*.class"/>
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Main-Class" value="com.jswiff.cli.JSwiffCli"/>
      </manifest>
    </jar>
  	<delete dir="${classDir}" includeEmptyDirs="true" />
  </target>

  <!-- create javadoc -->
  <target name="javadoc" depends="init">
    <delete dir="${javadocDir}" includeEmptyDirs="true" />
    <javadoc sourcepath="${srcDir}"
             destdir="${javadocDir}"
             encoding="UTF-8"
             charset="UTF-8"
             packagenames="com.jswiff.*"
             excludepackagenames="com.jswiff.tests.*,com.jswiff.investigator.*"
             access="public"
             breakiterator="true"
             use="true"
             notree="false"
             nonavbar="false"
             noindex="false"
             splitindex="true"
             author="false"
             version="false"
             nodeprecatedlist="true"
             nodeprecated="true"
             stylesheetfile="${buildDir}/javadoc.css"
             doctitle="JSwiff API Reference"
             additionalparam="-bottom &quot;&lt;div id='bottom'&gt;&amp;copy; 2005 Ralf Terdic. All rights reserved.&lt;br&gt;&lt;a href='http://www.jswiff.com'&gt;www.jswiff.com&lt;/a&gt;&lt;/div&gt;&quot;&#10;"
             windowtitle="JSwiff API Reference">
      <classpath>
        <pathelement path="${libDir}/dom4j-1.6.1.jar" />
      </classpath>
    </javadoc>
  </target>

  <!-- create a zip distribution file -->
  <target name="zip" depends="jar,javadoc">
    <zip destfile="${zipFile}" basedir="." excludes="bin/**,dist/**,*.zip,*.tar,*.tar.gz" />
  	<delete dir="${javadocDir}" includeEmptyDirs="true" />
  	<delete file="${jarFile}" />
  </target>

  <!-- create a tar.gz distribution file -->
  <target name="tgz" depends="jar,javadoc">
    <tar destfile="${tarFile}" basedir="." excludes="bin/**,dist/**,*.zip,*.tar,*.tar.gz" />
    <gzip zipfile="${tgzFile}" src="${tarFile}" />
    <delete file="${tarFile}" />
  	<delete dir="${javadocDir}" includeEmptyDirs="true" />
  	<delete file="${jarFile}" />
  </target>

  <!-- clean up everything -->
  <target name="clean" depends="init">
    <delete dir="${classDir}" includeEmptyDirs="true" />
    <delete dir="${javadocDir}" includeEmptyDirs="true" />
  	<delete dir="${distDir}" includeEmptyDirs="true" />
  </target>

</project>
